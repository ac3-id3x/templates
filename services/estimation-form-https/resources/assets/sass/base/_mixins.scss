// ===================================
// Breakpoints
// Twitter Bootstrap 4 Alpha
// ===================================
// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.
// Makes the @content apply to the given breakpoint and wider.
@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {
    $min: breakpoint-min($name, $breakpoints);
    @if $min {
        @media (min-width: $min) {
            @content;
        }
    } @else {
        @content;
    }
}

// Media of at most the maximum breakpoint width. No query for the largest breakpoint.
// Makes the @content apply to the given breakpoint and narrower.
@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {
    $max: breakpoint-max($name, $breakpoints);

    @if $max {
        @media (max-width: $max) {
            @content;
        }
    } @else {
        @content;
    }
}

// Media between the breakpoint's minimum and maximum widths.
// No minimum for the smallest breakpoint, and no maximum for the largest one.
// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.
@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {
    @include media-breakpoint-up($name, $breakpoints) {
        @include media-breakpoint-down($name, $breakpoints) {
            @content;
        }
    }
}

// Media that spans multiple breakpoint widths.
// Makes the @content apply between the min and max breakpoints
@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {
    @include media-breakpoint-up($lower, $breakpoints) {
        @include media-breakpoint-down($upper, $breakpoints) {
            @content;
        }
    }
}

// ===================================
// Clearfix
// ===================================
@mixin clearfix {
    *zoom: 1;

    &:before, &:after {
        content:     '';
        display:     table;
        line-height: 0;
    }

    &:after {
        clear: both;
    }
}

// ===================================
// Gradients
// ===================================
@mixin linear-gradient($top, $bottom) {
    background: $top;
    background: -moz-linear-gradient(top, $top 0%, $bottom 100%);
    background: -webkit-gradient(linear, left top, left bottom, color-stop(0%, $top), color-stop(100%, $bottom));
    background: -webkit-linear-gradient(top, $top 0%, $bottom 100%);
    background: -o-linear-gradient(top, $top 0%, $bottom 100%);
    background: -ms-linear-gradient(top, $top 0%, $bottom 100%);
    background: linear-gradient(to bottom, $top 0%, $bottom 100%);
    filter:     progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffffff', endColorstr='#000000', GradientType=0);
}

// ===================================
// Border-Radius
// ===================================
@import "border-radius";

// ===================================
// Text Ellipsis
// ===================================
@mixin text-ellipsis {
    overflow:      hidden;
    text-overflow: ellipsis;
    white-space:   nowrap;
}

// ===================================
// Simple Transition
// ===================================
@mixin transition($speed: 200ms) {
    transition: all $speed ease-in-out;
}

// ===================================
// Center Vertically
// ===================================
@mixin vertical-center($position: relative) {
    position:  $position;
    top:       50%;
    transform: translateY(-50%);
}

// ===================================
// Adaptive Text Color
// ===================================
@mixin color($bg, $color: '') {
    $lightness: lightness($bg);

    @if $color == '' {
        $color: darken($bg, $lightness / 2)
    }

    @if ($lightness <= 60%) {
        color: #fff;
    } @else {
        color: $color;
    }
}

// ===================================
// Shared Styles
// ===================================
@mixin button($color) {
    background-color: $color;

    &:hover, &:focus {
        background-color: darken($color, 5%);
    }
}
